import java.io.*;
import java.util.*;
import java.util.stream.*;
import static java.util.stream.Collectors.toList;

public class Main{ 
    public static void main(String[] args)throws IOException{
        BufferedReader bf=new BufferedReader(new InputStreamReader(System.in));
         int[] st=Stream.of(bf.readLine().trim().split(" "))
        .mapToInt(s->Integer.parseInt(s)).toArray();
        
        int n=st[0];
        int k=st[1];
        
      int[] arr=Stream.of(bf.readLine().trim().split(" "))
        .mapToInt(s->Integer.parseInt(s)).toArray();
        
        sortedRotated(n,k,arr);
}


public static void sortedRotated(int n,int k,int[] arr){
    
    int low=0;
    int high=n-1;
    while(low<=high){
        int mid=low+((high-low)/2);
        if(arr[mid]>arr[high]){
            low=mid+1;
        }
        else if(arr[mid]<arr[high]){
            high=mid;
        }
        else {
           high--;
        }
    }
    int left=0;
    int right=n-1;
    
   if(k>arr[right]){
       
       searchBinary(arr,k,left,low-1);
   } 
   
   else{
       searchBinary(arr,k,low,right);
   } 
}

public static void searchBinary(int[] arr,int k,int low,int high){
       int ans=-1;
        while(low<=high){
            int mid=low+((high-low)/2);
            if(arr[mid]==k){
                ans=mid;
                System.out.println(ans);
                return;
            }
            else if(arr[mid]>k){
                high=mid-1;
            }
            else{
                low=mid+1;
            }
        }
        System.out.println(ans);
    }    

}